# Bill Sacks
# August, 2012

# This documents the procedure for regridding the Bamber Greenland
# landcover data to 30" resolution, so that it can be merged with Alex
# Gardner's glacier cover dataset.

# This file and any associated scripts can be found here:

# https://svn-user-sacks.cgd.ucar.edu/cism_misc/regrid_bamber_to_30sec/trunk

# The various intermediate files can be found on roo:
# ~/cism_misc/regrid_bamber_to_30sec

# ----------------------------------------------------------------------
# Create template file for output
# ----------------------------------------------------------------------

# We want the final output file to have the coordinates and bounds of
# "tile B" from the GLOBE topography dataset. This is a 30" file with
# bounds of 50 - 90N, -90 to 0E. (Resulting array should be 10800 x
# 4800.)

# (Did the following on mirage, because it didn't work on roo)

# (The input file came from Jeremy Fyke:
# GLOBE_glacier_mask/Gardner_ice_mask_data/ASG_ice_shelf_0.0083.nc)

ncks -d lat,50.,90. -d lon,-90.,0. ASG_ice_shelf_0.0083.nc template_out.nc
ncwa -O -a time template_out.nc template_out2.nc
mv template_out2.nc template_out.nc
ncrename -v 'ice shelf',ice_shelf template_out.nc

# convert to netcdf3 format (needed for ncl on mirage)
ncap2 -O -s 'ice_shelf=byte(ice_shelf)' template_out.nc template_out.nc
ncks -O -3 template_out.nc template_out.nc

# ----------------------------------------------------------------------
# Convert Bamber landcover to continuous fields, and do other
# modifications to get Bamber data ready for interpolation
# ----------------------------------------------------------------------

# Extract desired fields
# Note that this uses the file with my fixed landcover variable
ncks -v lat,lon,landcover,usrf,mapping ../fixing_greenland_data/Greenland_5km_v1.1_SacksRev_c110629.nc bamber_5km.nc

# Remove degenerate time dimension
ncwa -O -a time bamber_5km.nc bamber_5km.nc

# Add fill value attribute to usrf
ncatted -a _FillValue,usrf,c,f,-9999. bamber_5km.nc

# Convert to continuous fields: % icesheet, % gic. Also, create landmask variable
ncap2 -S convert_bamber_fields.ncap2 bamber_5km.nc bamber_5km_converted.nc

# ----------------------------------------------------------------------
# Interpolate to 30" grid
# ----------------------------------------------------------------------

# This interpolation is done using ncl's rcm2rgrid, which uses inverse
# distance weighting. According to the documentation:
#
# "The code searches the input curvilinear grid latitudes and
# longitudes for the four grid points that surround a specified output
# grid coordinate. Because one or more of these input points could
# contain missing values (@_FillValue), fewer than four points could
# be used in the interpolation."
# 
# This gives the treatment of missing values that I want: i.e., it
# sounds like it proceeds happily with whatever values are present
# (avoiding encroachment of missing values).

# linint2 (ncl's bilinear interpolation) isn't
# possible because it only handles rectilinear grids

# here is a test run making a 1-deg output (just to test rcm2rgrid_wrapper):
# ncl ~/ncl/rcm2rgrid_wrapper.ncl input_file_name=\"bamber_5km_converted.nc\" input_var_name=\"usrf\" output_file_name=\"usrf_30sec.nc\" out_res=1 north=90 south=50 west=-90 east=0

# Did the following on mirage:
nohup ncl ~/ncl/rcm2rgrid_wrapper.ncl input_file_name=\"bamber_5km_converted.nc\" input_var_name=\"pct_gic\" output_file_name=\"pct_gic_30sec.nc\" template_file_name=\"template_out.nc\" template_var_name=\"ice_shelf\" > gic.out &
nohup ncl ~/ncl/rcm2rgrid_wrapper.ncl input_file_name=\"bamber_5km_converted.nc\" input_var_name=\"pct_icesheet\" output_file_name=\"pct_icesheet_30sec.nc\" template_file_name=\"template_out.nc\" template_var_name=\"ice_shelf\" > icesheet.out &
nohup ncl ~/ncl/rcm2rgrid_wrapper.ncl input_file_name=\"bamber_5km_converted.nc\" input_var_name=\"landmask\" output_file_name=\"landmask_30sec.nc\" template_file_name=\"template_out.nc\" template_var_name=\"ice_shelf\" > landmask.out &
nohup ncl ~/ncl/rcm2rgrid_wrapper.ncl input_file_name=\"bamber_5km_converted.nc\" input_var_name=\"usrf\" output_file_name=\"usrf_30sec.nc\" template_file_name=\"template_out.nc\" template_var_name=\"ice_shelf\" > usrf.out &

# Put all variables in a single file
ncks -v pct_gic pct_gic_30sec.nc bamber_30sec.nc
ncks -A -v pct_icesheet pct_icesheet_30sec.nc bamber_30sec.nc
ncks -A -v landmask landmask_30sec.nc bamber_30sec.nc
ncks -A -v usrf usrf_30sec.nc bamber_30sec.nc

# ----------------------------------------------------------------------
# Convert landmask to 0/1
# ----------------------------------------------------------------------

ncap2 -s 'where(landmask > 0) landmask=1; landmask=byte(landmask)' bamber_30sec.nc bamber_30sec_landmask.nc

mv bamber_30sec_landmask.nc bamber_30sec.nc

# ----------------------------------------------------------------------
# Compute derived quantities
# ----------------------------------------------------------------------

ncap2 -s 'pct_landice = pct_gic + pct_icesheet' bamber_30sec.nc bamber_30sec_derived.nc

rm bamber_30sec.nc
ncks -x -v pct_icesheet bamber_30sec_derived.nc bamber_30sec.nc
rm bamber_30sec_derived.nc
